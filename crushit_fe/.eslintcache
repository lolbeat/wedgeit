[{"/Users/laurencebeattie/OneDrive/Documents/DataScience/Web_Programming/Projects/wedgeit/crushit_fe/src/index.js":"1"},{"size":6745,"mtime":1608017021000,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1905bwl","/Users/laurencebeattie/OneDrive/Documents/DataScience/Web_Programming/Projects/wedgeit/crushit_fe/src/index.js",["7"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n\r\nfunction ScorecardHeaders(props) {\r\n  return (\r\n    <div className = \"labels\">\r\n      {props.system}\r\n      <label><strong>hole</strong></label>\r\n      <label>par</label>\r\n      <label>index</label>\r\n      <label>length</label>\r\n      <label>score</label>\r\n      <label>putts</label>\r\n      <label>fairway</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction GolfHole(props) {\r\n  return (\r\n    <div className = \"golfhole\">\r\n      <label className = \"hole-label\" onClick={function() { alert('Show additional hole info'); }}>\r\n        <strong>{props.hole}</strong><br/>\r\n        {props.par}<br/>\r\n        {props.index}<br/>\r\n        {props.length}\r\n      </label>\r\n      <button className = \"score-btn\" onClick={props.onClickScore}>\r\n        {props.score}\r\n      </button>\r\n      <button className = \"score-btn\" onClick={props.onClickPutts}>\r\n        {props.putts}\r\n      </button>\r\n      <button className = \"score-btn\" onClick={props.onClickFairway}>\r\n        {props.fairway}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass ScoreCard extends React.Component {\r\n  renderLabels() {\r\n    return (\r\n      <ScorecardHeaders\r\n        system={this.props.system}\r\n      />\r\n    );\r\n  }\r\n  renderGolfHole(i) {\r\n    return (\r\n      <GolfHole\r\n        hole={this.props.hole[i]}\r\n        par={this.props.par[i]}\r\n        index={this.props.index[i]}\r\n        length={this.props.length[0][i+1]}\r\n        score={this.props.score[i]}\r\n        putts={this.props.putts[i]}\r\n        fairway={this.props.fairway[i]}\r\n        onClickScore={() => this.props.onClickScore(i)}\r\n        onClickPutts={() => this.props.onClickPutts(i)}\r\n        onClickFairway={() => this.props.onClickFairway(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"labels\">\r\n          {this.renderLabels()}\r\n        </div>\r\n        <div className=\"score-row\">\r\n          {this.renderGolfHole(0)}\r\n          {this.renderGolfHole(1)}\r\n          {this.renderGolfHole(2)}\r\n          {this.renderGolfHole(3)}\r\n          {this.renderGolfHole(4)}\r\n          {this.renderGolfHole(5)}\r\n          {this.renderGolfHole(6)}\r\n          {this.renderGolfHole(7)}\r\n          {this.renderGolfHole(8)}\r\n          {this.renderGolfHole(9)}\r\n          {this.renderGolfHole(10)}\r\n          {this.renderGolfHole(11)}\r\n          {this.renderGolfHole(12)}\r\n          {this.renderGolfHole(13)}\r\n          {this.renderGolfHole(14)}\r\n          {this.renderGolfHole(15)}\r\n          {this.renderGolfHole(16)}\r\n          {this.renderGolfHole(17)}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass GolfRound extends React.Component {\r\n//  TO DO: we will fetch all the golfround data via API\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      system: \"metric\",\r\n      history:[{\r\n        score: Array(18).fill(0),\r\n        hole: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\r\n        par: [4,4,3,5,4,3,4,5,4,4,5,4,3,4,5,4,3,4],\r\n        index: [5,8,3,4,9,13,17,18,1,2,16,6,15,7,10,12,11,14],\r\n        length: [['blue',320,360,160,450,340,137,320,345,434,346,450,320,155,300,440,290,120,299]],\r\n        putts: Array(18).fill(0),\r\n        fairway: Array(18).fill('|'),\r\n      }],\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleScoreClick(i){\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const score = current.score.slice();\r\n    const hole = current.hole.slice();\r\n    const par = current.par.slice();\r\n    const index = current.index.slice();\r\n    const length = current.length.slice();\r\n    const putts = current.putts.slice();\r\n    const fairway = current.fairway.slice();\r\n    if (finalScoreCheck(score) === true) {\r\n      return;\r\n    }\r\n    score[i]= Math.floor((Math.random()*10) + 1);\r\n    this.setState({\r\n      history: history.concat([{\r\n        score: score,\r\n        hole: hole,\r\n        par: par,\r\n        index: index,\r\n        length: length,\r\n        putts: putts,\r\n        fairway: fairway,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  handlePuttsClick(i){\r\n    alert('putts');\r\n    return;\r\n  }\r\n  handleFairwayClick(i){\r\n    alert('fairway');\r\n    return;\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) ===0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const complete = finalScoreCheck(current.score);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (complete) {\r\n      status = 'complete scorecard';\r\n    }\r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X':'O');\r\n    }\r\n    return (\r\n      <div className=\"golfround\">\r\n        <div className=\"round-scorecard\">\r\n          <ScoreCard\r\n            hole={current.hole}\r\n            score={current.score}\r\n            par={current.par}\r\n            index={current.index}\r\n            length={current.length}\r\n            putts={current.putts}\r\n            fairway={current.fairway}\r\n            onClickScore={(i) => this.handleScoreClick(i)}\r\n            onClickPutts={(i) => this.handlePuttsClick(i)}\r\n            onClickFairway={(i) => this.handleFairwayClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"round-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction finalScoreCheck(score) {\r\n\r\n  for (let i = 0; i < score.length; i++) {\r\n    if (score[i] === 0) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n//..\r\nclass ScoreForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {    this.setState({value: event.target.value});  }\r\n  handleSubmit(event) {\r\n    alert('A score was submitted: ' + this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Score:\r\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <GolfRound />,\r\n  document.getElementById('root')\r\n);\r\n",{"ruleId":"8","severity":1,"message":"9","line":224,"column":7,"nodeType":"10","messageId":"11","endLine":224,"endColumn":16},"no-unused-vars","'ScoreForm' is defined but never used.","Identifier","unusedVar"]